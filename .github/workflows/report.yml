name: Daily Stock Report

on:
  schedule:
    - cron: "0 0 * * 1-5"
  workflow_dispatch:

jobs:
  build-and-report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          # 必要なパッケージをrequirements.txtに記載
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Cache NLTK data
        uses: actions/cache@v3
        with:
          path: ~/nltk_data
          key: ${{ runner.os }}-nltk-data-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-nltk-data-
      - name: Download NLTK data
        run: |
          python -c "import nltk; nltk.download('punkt', quiet=True); nltk.download('stopwords', quiet=True); nltk.download('wordnet', quiet=True); nltk.download('averaged_perceptron_tagger', quiet=True)"
        timeout-minutes: 5
      
      - name: Pre-download defeatbeta-api data
        run: |
          python -c "import sys; sys.path.insert(0, 'src'); from defeatbeta_api.data.ticker import Ticker; print('defeatbeta-api data downloaded successfully')" || echo "defeatbeta-api data download skipped or failed (may not be critical)"
        timeout-minutes: 5
      
      - name: Run main.py
        run: |
          python src/main.py
        env:
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          MAIL_TO: ${{ secrets.MAIL_TO }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          YAHOO_API_KEY: ${{ secrets.YAHOO_API_KEY }}
